{"ast":null,"code":"var _jsxFileName = \"/Users/swapnilbhisey/github/jvm-thread-visualizer/src/components/HeapAllocChart.tsx\";\nimport React from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Brush } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HeapAllocChart = ({\n  data,\n  darkMode\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-96\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: `text-xl font-semibold mb-4 ${darkMode ? 'text-gray-100' : 'text-gray-900'}`,\n      children: \"Heap Allocation Rate Over Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"85%\",\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: data,\n        margin: {\n          top: 20,\n          right: 30,\n          left: 40,\n          bottom: 40\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\",\n          stroke: darkMode ? '#444' : '#ccc'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"timestamp\",\n          tickFormatter: timestamp => new Date(timestamp).toLocaleTimeString(),\n          stroke: darkMode ? '#ccc' : '#333'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          label: {\n            value: 'Allocation Rate (MB/s)',\n            angle: -90,\n            position: 'insideLeft',\n            fill: darkMode ? '#ccc' : '#333'\n          },\n          tickFormatter: value => (value / (1024 * 1024)).toFixed(2),\n          stroke: darkMode ? '#ccc' : '#333'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          contentStyle: {\n            background: darkMode ? '#222' : '#fff',\n            color: darkMode ? '#fff' : '#222'\n          },\n          labelFormatter: timestamp => new Date(timestamp).toLocaleString(),\n          formatter: value => [`${(value / (1024 * 1024)).toFixed(2)} MB/s`, 'Allocation Rate']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {\n          wrapperStyle: {\n            color: darkMode ? '#ccc' : '#333'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"heapAllocRate\",\n          stroke: \"#82ca9d\",\n          activeDot: {\n            r: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Brush, {\n          dataKey: \"timestamp\",\n          height: 30,\n          stroke: \"#82ca9d\",\n          tickFormatter: timestamp => new Date(timestamp).toLocaleTimeString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = HeapAllocChart;\nvar _c;\n$RefreshReg$(_c, \"HeapAllocChart\");","map":{"version":3,"names":["React","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","Brush","jsxDEV","_jsxDEV","HeapAllocChart","data","darkMode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","margin","top","right","left","bottom","strokeDasharray","stroke","dataKey","tickFormatter","timestamp","Date","toLocaleTimeString","label","value","angle","position","fill","toFixed","contentStyle","background","color","labelFormatter","toLocaleString","formatter","wrapperStyle","type","activeDot","r","_c","$RefreshReg$"],"sources":["/Users/swapnilbhisey/github/jvm-thread-visualizer/src/components/HeapAllocChart.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  Brush,\n} from 'recharts';\nimport { ProcessSummary } from '../utils/parser.ts';\n\ninterface HeapAllocChartProps {\n  data: ProcessSummary[];\n  darkMode?: boolean;\n}\n\nexport const HeapAllocChart: React.FC<HeapAllocChartProps> = ({ data, darkMode }) => {\n  return (\n    <div className=\"h-96\">\n      <h2 className={`text-xl font-semibold mb-4 ${darkMode ? 'text-gray-100' : 'text-gray-900'}`}>Heap Allocation Rate Over Time</h2>\n      <ResponsiveContainer width=\"100%\" height=\"85%\">\n        <LineChart\n          data={data}\n          margin={{\n            top: 20,\n            right: 30,\n            left: 40,\n            bottom: 40,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" stroke={darkMode ? '#444' : '#ccc'} />\n          <XAxis\n            dataKey=\"timestamp\"\n            tickFormatter={(timestamp) => new Date(timestamp).toLocaleTimeString()}\n            stroke={darkMode ? '#ccc' : '#333'}\n          />\n          <YAxis\n            label={{ value: 'Allocation Rate (MB/s)', angle: -90, position: 'insideLeft', fill: darkMode ? '#ccc' : '#333' }}\n            tickFormatter={(value) => (value / (1024 * 1024)).toFixed(2)}\n            stroke={darkMode ? '#ccc' : '#333'}\n          />\n          <Tooltip\n            contentStyle={{ background: darkMode ? '#222' : '#fff', color: darkMode ? '#fff' : '#222' }}\n            labelFormatter={(timestamp) => new Date(timestamp).toLocaleString()}\n            formatter={(value: number) => [`${(value / (1024 * 1024)).toFixed(2)} MB/s`, 'Allocation Rate']}\n          />\n          <Legend wrapperStyle={{ color: darkMode ? '#ccc' : '#333' }} />\n          <Line\n            type=\"monotone\"\n            dataKey=\"heapAllocRate\"\n            stroke=\"#82ca9d\"\n            activeDot={{ r: 8 }}\n          />\n          <Brush dataKey=\"timestamp\" height={30} stroke=\"#82ca9d\" tickFormatter={(timestamp) => new Date(timestamp).toLocaleTimeString()} />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}