{"ast":null,"code":"var _jsxFileName = \"/Users/swapnilbhisey/github/jvm-thread-visualizer/src/components/HeapAllocChart.tsx\";\nimport React from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Brush } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HeapAllocChart = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-96\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold text-gray-900 mb-4\",\n      children: \"Heap Allocation Rate Over Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n      width: \"100%\",\n      height: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(LineChart, {\n        data: data,\n        margin: {\n          top: 5,\n          right: 30,\n          left: 20,\n          bottom: 5\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"timestamp\",\n          tickFormatter: timestamp => new Date(timestamp).toLocaleTimeString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          label: {\n            value: 'Allocation Rate (MB/s)',\n            angle: -90,\n            position: 'insideLeft'\n          },\n          tickFormatter: value => (value / (1024 * 1024)).toFixed(2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          labelFormatter: timestamp => new Date(timestamp).toLocaleString(),\n          formatter: value => [`${(value / (1024 * 1024)).toFixed(2)} MB/s`, 'Allocation Rate']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"heapAllocRate\",\n          stroke: \"#82ca9d\",\n          activeDot: {\n            r: 8\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Brush, {\n          dataKey: \"timestamp\",\n          height: 30,\n          stroke: \"#82ca9d\",\n          tickFormatter: timestamp => new Date(timestamp).toLocaleTimeString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c = HeapAllocChart;\nvar _c;\n$RefreshReg$(_c, \"HeapAllocChart\");","map":{"version":3,"names":["React","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","Brush","jsxDEV","_jsxDEV","HeapAllocChart","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","tickFormatter","timestamp","Date","toLocaleTimeString","label","value","angle","position","toFixed","labelFormatter","toLocaleString","formatter","type","stroke","activeDot","r","_c","$RefreshReg$"],"sources":["/Users/swapnilbhisey/github/jvm-thread-visualizer/src/components/HeapAllocChart.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  Brush,\n} from 'recharts';\nimport { ProcessSummary } from '../utils/parser.ts';\n\ninterface HeapAllocChartProps {\n  data: ProcessSummary[];\n}\n\nexport const HeapAllocChart: React.FC<HeapAllocChartProps> = ({ data }) => {\n  return (\n    <div className=\"h-96\">\n      <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Heap Allocation Rate Over Time</h2>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <LineChart\n          data={data}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis\n            dataKey=\"timestamp\"\n            tickFormatter={(timestamp) => new Date(timestamp).toLocaleTimeString()}\n          />\n          <YAxis\n            label={{ value: 'Allocation Rate (MB/s)', angle: -90, position: 'insideLeft' }}\n            tickFormatter={(value) => (value / (1024 * 1024)).toFixed(2)}\n          />\n          <Tooltip\n            labelFormatter={(timestamp) => new Date(timestamp).toLocaleString()}\n            formatter={(value: number) => [`${(value / (1024 * 1024)).toFixed(2)} MB/s`, 'Allocation Rate']}\n          />\n          <Legend />\n          <Line\n            type=\"monotone\"\n            dataKey=\"heapAllocRate\"\n            stroke=\"#82ca9d\"\n            activeDot={{ r: 8 }}\n          />\n          <Brush dataKey=\"timestamp\" height={30} stroke=\"#82ca9d\" tickFormatter={(timestamp) => new Date(timestamp).toLocaleTimeString()} />\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  );\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}