{"ast":null,"code":"export function parseJvmThreadDump(content) {\n  // TODO: Implement actual parsing logic\n  // For now, return mock data\n  return [{\n    timestamp: Date.now(),\n    cpuUsage: 25.5,\n    heapAllocRate: 1024 * 1024 * 10,\n    // 10 MB/s\n    threads: [{\n      id: \"1\",\n      name: \"main\",\n      state: \"RUNNABLE\",\n      cpuUsage: 15.2,\n      allocRate: 1024 * 1024 * 5 // 5 MB/s\n    }, {\n      id: \"2\",\n      name: \"GC Thread\",\n      state: \"WAITING\",\n      cpuUsage: 5.3,\n      allocRate: 1024 * 1024 * 2 // 2 MB/s\n    }]\n  }];\n}","map":{"version":3,"names":["parseJvmThreadDump","content","timestamp","Date","now","cpuUsage","heapAllocRate","threads","id","name","state","allocRate"],"sources":["/Users/swapnilbhisey/github/jvm-thread-visualizer/src/utils/parser.ts"],"sourcesContent":["export interface ThreadStats {\n  id: string;\n  name: string;\n  state: string;\n  cpuUsage: number;\n  allocRate: number;\n}\n\nexport interface ProcessSummary {\n  timestamp: number;\n  cpuUsage: number;\n  heapAllocRate: number;\n  threads: ThreadStats[];\n}\n\nexport function parseJvmThreadDump(content: string): ProcessSummary[] {\n  // TODO: Implement actual parsing logic\n  // For now, return mock data\n  return [\n    {\n      timestamp: Date.now(),\n      cpuUsage: 25.5,\n      heapAllocRate: 1024 * 1024 * 10, // 10 MB/s\n      threads: [\n        {\n          id: \"1\",\n          name: \"main\",\n          state: \"RUNNABLE\",\n          cpuUsage: 15.2,\n          allocRate: 1024 * 1024 * 5, // 5 MB/s\n        },\n        {\n          id: \"2\",\n          name: \"GC Thread\",\n          state: \"WAITING\",\n          cpuUsage: 5.3,\n          allocRate: 1024 * 1024 * 2, // 2 MB/s\n        },\n      ],\n    },\n  ];\n} "],"mappings":"AAeA,OAAO,SAASA,kBAAkBA,CAACC,OAAe,EAAoB;EACpE;EACA;EACA,OAAO,CACL;IACEC,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;IACrBC,QAAQ,EAAE,IAAI;IACdC,aAAa,EAAE,IAAI,GAAG,IAAI,GAAG,EAAE;IAAE;IACjCC,OAAO,EAAE,CACP;MACEC,EAAE,EAAE,GAAG;MACPC,IAAI,EAAE,MAAM;MACZC,KAAK,EAAE,UAAU;MACjBL,QAAQ,EAAE,IAAI;MACdM,SAAS,EAAE,IAAI,GAAG,IAAI,GAAG,CAAC,CAAE;IAC9B,CAAC,EACD;MACEH,EAAE,EAAE,GAAG;MACPC,IAAI,EAAE,WAAW;MACjBC,KAAK,EAAE,SAAS;MAChBL,QAAQ,EAAE,GAAG;MACbM,SAAS,EAAE,IAAI,GAAG,IAAI,GAAG,CAAC,CAAE;IAC9B,CAAC;EAEL,CAAC,CACF;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}